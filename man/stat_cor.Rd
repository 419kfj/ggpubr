% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_cor.R
\name{stat_cor}
\alias{stat_cor}
\title{Add Correlation Coefficients with P-values to a Scatter Plot}
\usage{
stat_cor(mapping = NULL, data = NULL, method = "pearson",
  label.sep = ", ", label.x.npc = "left", label.y.npc = "top",
  label.x = NULL, label.y = NULL, geom = "text", position = "identity",
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{method}{a character string indicating which correlation coefficient (or
covariance) is to be computed. One of "pearson" (default), "kendall", or
"spearman".}

\item{label.sep}{a character string to separate the terms. Default is ", ", to
separate the correlation coefficient and the p.value.}

\item{label.x.npc, label.y.npc}{can be \code{numeric} or \code{character}
  vector of the same length as the number of groups and/or panels. If too
  short they will be recycled. \itemize{ \item If \code{numeric}, value
  should be between 0 and 1. Coordinates to be used for positioning the
  label, expressed in "normalized parent coordinates". \item If
  \code{character}, allowed values include: i) one of c('right', 'left',
  'center', 'centre', 'middle') for x-axis; ii) and one of c( 'bottom',
  'top', 'center', 'centre', 'middle') for y-axis.}

  If too short they will be recycled.}

\item{label.x, label.y}{\code{numeric} Coordinates (in data units) to be used
for absolute positioning of the label. If too short they will be recycled.}

\item{na.rm}{If FALSE (the default), removes missing values with a warning.
If TRUE silently removes missing values.}

\item{...}{other arguments to pass to \code{\link[ggplot2]{geom_text}} or
\code{\link[ggplot2]{geom_label}}.}
}
\description{
Add correlation coefficients with p-values to a scatter plot.
}
\examples{
# Load data
data("mtcars")
df <- mtcars
df$cyl <- as.factor(df$cyl)

# Scatter plot with correlation coefficient
#:::::::::::::::::::::::::::::::::::::::::::::::::
sp <- ggscatter(df, x = "wt", y = "mpg",
   add = "reg.line",  # Add regressin line
   add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
   conf.int = TRUE # Add confidence interval
   )
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)

# Color by groups and facet
#::::::::::::::::::::::::::::::::::::::::::::::::::::
sp <- ggscatter(df, x = "wt", y = "mpg",
   color = "cyl", palette = "jco",
   add = "reg.line", conf.int = TRUE)
sp + stat_cor(aes(color = cyl), label.x = 3)

}
\seealso{
\code{\link{ggscatter}}
}
